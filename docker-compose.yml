version: '3.5'

services:
  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      # KRaft settings
      - KAFKA_ENkafka_KRAFT=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_SECURITY_PROTOCOL=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - "kafka-data:/bitnami"
    networks:
      - kafka
  kafka_init:
    image: egonzalezt/dev-kafka-topic-creator:latest
    volumes:
      - ./topics.txt:/scripts/topics.txt:ro      
    environment:
      - FILE_PATH=/scripts/topics.txt
      - BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka
networks:
  kafka:
    name: kafka_network
volumes:
  kafka-data: